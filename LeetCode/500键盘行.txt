500. 键盘行
给定一个单词列表，只返回可以使用在键盘同一行的字母打印出来的单词。键盘如下图所示。

 

American keyboard

 

示例：

输入: ["Hello", "Alaska", "Dad", "Peace"]
输出: ["Alaska", "Dad"]
 

注意：

你可以重复使用键盘上同一字符。
你可以假设输入的字符串将只包含字母。

class Solution {
public:
    vector<string> findWords(vector<string>& words) {
        map<char, int> map1 = {{'q',0},{'w',0},{'e',0},{'r',0},{'t',0},{'y',0},{'u',0},{'i',0},{'o',0},{'p',0},{'a',1},{'s',1},{'d',1},{'f',1},{'g',1},{'h',1},{'j',1},                                     {'k',1},{'l',1},{'z',2},{'x',2},{'c',2},{'v',2},{'b',2},{'n',2},{'m',2},{'Q',0},{'W',0},{'E',0},{'R',0},{'T',0},{'Y',0},{'U',0},{'I',0},                                    {'O',0},{'P',0},{'A',1},{'S',1},{'D',1},{'F',1},{'G',1},{'H',1},{'J',1},{'K',1},{'L',1},{'Z',2},{'X',2},{'C',2},{'V',2},{'B',2},{'N',                                       2},{'M',2}};
        vector<string> res;
        string strTemp;
        int k, flat;
        for(int i = 0 ; i < words.size(); i++)
        {
            strTemp = words[i];
            k = map1[strTemp[0]];
            if(strTemp.size() == 1) res.push_back(strTemp);
            else{
                flat = 0;
                for(int j = 1; j < strTemp.size(); j++)
                {
                    if(map1[strTemp[j]] != k)
                    {
                        flat = 1;
                        break;
                    }
                }
                if(flat == 0) res.push_back(strTemp);
            }
        }
        return res;
    }
};